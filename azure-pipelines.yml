trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

jobs:
- job: Build
  steps:

  - powershell: |
      Get-ChildItem -Path '$(Build.SourcesDirectory)/CustomPackages' -Filter *.* |
      Rename-Item -NewName { $_.Name -replace '\.mplig$','.nupkg' }
    displayName: 'Convert to NuGet Packages'

  - task: NuGetCommand@2
    inputs:
      command: 'restore'
      restoreSolution: '$(solution)'
      feedsToUse: 'select'
      includeNuGetOrg: true
      # Remove vstsFeed parameter completely
      # Add local source directly
      externalFeedCredentials: ''  # Keep empty
      packagesDirectory: '$(Build.SourcesDirectory)/packages'
    env:
      NUGET_PACKAGES: '$(Build.SourcesDirectory)/packages'

  # Additional step to find local packages
  - powershell: |
      Write-Host "##vso[task.setvariable variable=NUGET_PACKAGES]$(Build.SourcesDirectory)/packages"
      nuget locals all -list
      nuget install Core.ApiResponse -Source '$(Build.SourcesDirectory)/CustomPackages' -OutputDirectory '$(Build.SourcesDirectory)/packages' -NoCache
      nuget install Core.MSSQL.DataAccess -Source '$(Build.SourcesDirectory)/CustomPackages' -OutputDirectory '$(Build.SourcesDirectory)/packages' -NoCache
      nuget install Core.Middleware -Source '$(Build.SourcesDirectory)/CustomPackages' -OutputDirectory '$(Build.SourcesDirectory)/packages' -NoCache
    displayName: 'Install Local Packages to Cache'

  - task: VSBuild@1
    inputs:
      solution: '$(solution)'
      msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip"'
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'

  - task: VSTest@2
    inputs:
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(build.artifactStagingDirectory)'
      artifactName: 'drop'

- deployment: DeployToProduction
  displayName: 'Deploy to Production'
  environment: Production-Windows
  dependsOn: Build
  strategy:
    runOnce:
      deploy:
        steps:
        - download: current
          artifact: drop
          
        - task: IISWebAppDeploymentOnMachineGroup@0
          inputs:
            WebSiteName: 'MyAPI'
            Package: '$(Pipeline.Workspace)/drop/WebApp.zip'
            RemoveAdditionalFilesFlag: true
            TakeAppOfflineFlag: true